---
import Layout from '../../layouts/Layout.astro';
import { getProductById, registerInterest } from '../../services/supabase';

// Obter o ID do produto da URL
const { id } = Astro.params;

// Buscar detalhes do produto
const product = await getProductById(id);

// Verificar se o produto existe
if (!product) {
  return Astro.redirect('/');
}

// Processar formulário de interesse
let formSubmitted = false;
let formError = null;

if (Astro.request.method === 'POST') {
  try {
    const formData = await Astro.request.formData();
    
    const userData = {
      name: formData.get('name'),
      email: formData.get('email'),
      phone: formData.get('phone'),
      message: formData.get('message'),
      product_id: id
    };
    
    const success = await registerInterest(userData);
    
    if (success) {
      formSubmitted = true;
    } else {
      formError = 'Ocorreu um erro ao registrar seu interesse. Tente novamente.';
    }
  } catch (error) {
    console.error('Erro ao processar formulário:', error);
    formError = 'Ocorreu um erro ao processar o formulário. Tente novamente.';
  }
}

// Formatar preço
const formatPrice = (price) => {
  return new Intl.NumberFormat('pt-BR', {
    style: 'currency',
    currency: 'BRL'
  }).format(price);
};

// Encontrar a imagem principal
const mainImage = product.product_images.find(img => img.is_primary) || product.product_images[0];
---

<Layout title={product.title}>
  <div class="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-8">
    <div class="mb-6">
      <a href="/" class="text-primary-600 hover:text-primary-800 flex items-center">
        <svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5 mr-1" fill="none" viewBox="0 0 24 24" stroke="currentColor">
          <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M10 19l-7-7m0 0l7-7m-7 7h18" />
        </svg>
        Voltar para todos os produtos
      </a>
    </div>
    
    <div class="bg-white rounded-lg shadow-lg overflow-hidden">
      <div class="grid grid-cols-1 md:grid-cols-2 gap-8">
        <!-- Galeria de imagens -->
        <div class="p-6">
          <div class="relative aspect-square mb-4 rounded-lg overflow-hidden">
            {product.status === 'sold' && (
              <div class="absolute inset-0 bg-black bg-opacity-30 flex items-center justify-center z-10">
                <div class="bg-red-600 text-white text-xl font-bold py-2 px-6 transform -rotate-45">
                  Vendido
                </div>
              </div>
            )}
            <img 
              id="main-image" 
              src={mainImage?.image_url} 
              alt={product.title}
              class="w-full h-full object-cover"
            />
          </div>
          
          {product.product_images.length > 1 && (
            <div class="grid grid-cols-5 gap-2">
              {product.product_images.map((image) => (
                <div 
                  class={`aspect-square rounded-md overflow-hidden cursor-pointer border-2 ${image.id === mainImage?.id ? 'border-primary-500' : 'border-transparent'}`}
                  data-image-url={image.image_url}
                >
                  <img 
                    src={image.image_url} 
                    alt={product.title}
                    class="w-full h-full object-cover"
                  />
                </div>
              ))}
            </div>
          )}
        </div>
        
        <!-- Informações do produto -->
        <div class="p-6">
          <div class="flex justify-between items-start">
            <div>
              <h1 class="text-2xl font-bold text-gray-900">{product.title}</h1>
              <p class="text-sm text-gray-500 mt-1">
                Categoria: <a href={`/categoria/${product.categories.slug}`} class="text-primary-600 hover:underline">{product.categories.name}</a>
              </p>
            </div>
            <div class="text-2xl font-bold text-primary-600">
              {formatPrice(product.price)}
            </div>
          </div>
          
          <div class="mt-6">
            <h2 class="text-lg font-semibold text-gray-900 mb-2">Descrição</h2>
            <div class="prose prose-sm text-gray-700">
              {product.description.split('\n').map((paragraph) => (
                <p>{paragraph}</p>
              ))}
            </div>
          </div>
          
          <div class="mt-8">
            <div class={`p-4 rounded-lg ${product.status === 'available' ? 'bg-green-50' : 'bg-red-50'}`}>
              <h2 class="text-lg font-semibold mb-2">
                {product.status === 'available' ? 'Produto disponível' : 'Produto vendido'}
              </h2>
              
              {product.status === 'available' ? (
                <p class="text-sm text-gray-700">
                  Este produto está disponível para venda. Preencha o formulário abaixo para demonstrar interesse.
                </p>
              ) : (
                <p class="text-sm text-gray-700">
                  Este produto já foi vendido, mas você pode ver outros produtos disponíveis.
                </p>
              )}
            </div>
          </div>
        </div>
      </div>
      
      <!-- Formulário de interesse -->
      {product.status === 'available' && !formSubmitted ? (
        <div class="p-6 bg-gray-50 border-t border-gray-100">
          <h2 class="text-xl font-semibold text-gray-900 mb-4">Tenho interesse neste produto</h2>
          
          {formError && (
            <div class="bg-red-100 border border-red-200 text-red-800 rounded-md p-4 mb-4">
              {formError}
            </div>
          )}
          
          <form method="POST" class="grid grid-cols-1 md:grid-cols-2 gap-6">
            <div>
              <label for="name" class="label">Nome completo</label>
              <input 
                type="text" 
                id="name" 
                name="name" 
                required
                class="input"
              />
            </div>
            
            <div>
              <label for="phone" class="label">Telefone (WhatsApp)</label>
              <input 
                type="tel" 
                id="phone" 
                name="phone" 
                required
                class="input"
                placeholder="(00) 00000-0000"
              />
            </div>
            
            <div class="md:col-span-2">
              <label for="email" class="label">E-mail</label>
              <input 
                type="email" 
                id="email" 
                name="email" 
                required
                class="input"
              />
            </div>
            
            <div class="md:col-span-2">
              <label for="message" class="label">Mensagem (opcional)</label>
              <textarea 
                id="message" 
                name="message" 
                rows="3"
                class="input"
                placeholder="Perguntas ou comentários sobre o produto..."
              ></textarea>
            </div>
            
            <div class="md:col-span-2">
              <button type="submit" class="btn btn-primary w-full md:w-auto">
                Enviar interesse
              </button>
            </div>
          </form>
        </div>
      ) : product.status === 'available' && formSubmitted ? (
        <div class="p-6 bg-green-50 border-t border-gray-100 text-center">
          <svg xmlns="http://www.w3.org/2000/svg" class="h-16 w-16 text-green-500 mx-auto mb-4" fill="none" viewBox="0 0 24 24" stroke="currentColor">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 12l2 2 4-4m6 2a9 9 0 11-18 0 9 9 0 0118 0z" />
          </svg>
          <h2 class="text-xl font-semibold text-gray-900 mb-2">Interesse registrado com sucesso!</h2>
          <p class="text-gray-600 mb-4">
            Obrigado pelo seu interesse! Entraremos em contato em breve para combinar os detalhes.
          </p>
          <div class="flex justify-center space-x-4">
            <a href="/" class="btn btn-outline">
              Ver mais produtos
            </a>
          </div>
        </div>
      ) : null}
    </div>
  </div>
</Layout>

<script>
  // Galeria de imagens
  const mainImage = document.getElementById('main-image') as HTMLImageElement;
  const thumbnails = document.querySelectorAll('[data-image-url]');
  
  thumbnails.forEach(thumbnail => {
    thumbnail.addEventListener('click', () => {
      // Atualizar imagem principal
      const imageUrl = thumbnail.getAttribute('data-image-url');
      if (mainImage && imageUrl) {
        mainImage.src = imageUrl;
      }
      
      // Atualizar borda ativa
      thumbnails.forEach(thumb => {
        thumb.classList.remove('border-primary-500');
        thumb.classList.add('border-transparent');
      });
      thumbnail.classList.remove('border-transparent');
      thumbnail.classList.add('border-primary-500');
    });
  });
  
  // Máscara para telefone
  const phoneInput = document.getElementById('phone') as HTMLInputElement;
  if (phoneInput) {
    phoneInput.addEventListener('input', (e) => {
      const target = e.target as HTMLInputElement;
      let value = target.value.replace(/\D/g, '');
      
      if (value.length > 11) {
        value = value.substring(0, 11);
      }
      
      if (value.length > 2) {
        value = `(${value.substring(0, 2)}) ${value.substring(2)}`;
      }
      
      if (value.length > 10) {
        value = `${value.substring(0, 10)}-${value.substring(10)}`;
      }
      
      target.value = value;
    });
  }
</script>
