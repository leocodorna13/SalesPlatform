---
import Layout from '../../layouts/Layout.astro';
import ProductGrid from '../../components/ProductGrid.astro';
import WhatsAppButton from '../../components/WhatsAppButton.astro';
import { getProductById, registerInterest, incrementProductViews, getRelatedProducts, getSiteSettings } from '../../services/supabase';

// Definir interface para o produto
interface ProductImage {
  id: string;
  image_url: string;
  is_primary: boolean;
}

interface Product {
  id: string;
  title: string;
  description: string;
  price: number;
  status: 'available' | 'sold' | 'hidden';
  visible: boolean;
  product_images: ProductImage[];
  categories: {
    id: string;
    name: string;
    slug: string;
  };
  views: number;
  created_at: string;
  interest_count?: number;
}

// Obter o ID do produto da URL
const { id } = Astro.params;

// Verificar se o ID existe
if (!id) {
  return Astro.redirect('/');
}

// Buscar detalhes do produto
const product = await getProductById(id) as Product | null;

// Verificar se o produto existe e está visível
if (!product || !product.visible) {
  return Astro.redirect('/');
}

// Incrementar visualizações do produto
// Apenas incrementa visualizações em requisições GET (não em POST de formulário)
if (Astro.request.method === 'GET') {
  await incrementProductViews(id);
}

// Buscar produtos relacionados
const relatedProducts = await getRelatedProducts(id, product.categories.id);

// Buscar configurações do site
const siteSettings = await getSiteSettings();
const whatsappNumber = siteSettings && typeof siteSettings === 'object' && 'contactWhatsapp' in siteSettings ? siteSettings.contactWhatsapp as string : '';
const whatsappMessage = siteSettings && typeof siteSettings === 'object' && 'whatsappMessage' in siteSettings ? siteSettings.whatsappMessage as string : 'Olá, tenho interesse nesse desapego!';
const paymentMethods = siteSettings && typeof siteSettings === 'object' && 'paymentMethods' in siteSettings ? siteSettings.paymentMethods as string : 'Pix, dinheiro, ou cartão parcelado com juros da maquininha';
const projectName = siteSettings && typeof siteSettings === 'object' && 'projectName' in siteSettings ? siteSettings.projectName as string : 'Desapego dos Martins';

// Processar formulário de interesse
let formSubmitted = false;
let formError = '';

if (Astro.request.method === 'POST') {
  try {
    const formData = await Astro.request.formData();
    const isRegisterInterest = formData.get('register_interest') === 'true';
    
    if (isRegisterInterest) {
      // Registrar interesse
      const result = await registerInterest({
        product_id: id,
        name: 'Interesse via WhatsApp',
        email: 'whatsapp@interesse.com',
        phone: whatsappNumber || '0000000000',
        message: whatsappMessage || 'Interesse via botão'
      });
      
      if (result === true) {
        formSubmitted = true;
      } else {
        formError = 'Ocorreu um erro ao registrar seu interesse. Tente novamente.';
      }
    }
  } catch (error) {
    console.error('Erro ao processar interesse:', error);
    formError = 'Ocorreu um erro ao processar sua solicitação. Tente novamente.';
  }
}

// Função para formatar preço
function formatPrice(price: number): string {
  return price.toLocaleString('pt-BR', {
    style: 'currency',
    currency: 'BRL'
  });
}

// Imagem principal
const mainImage = product.product_images.find(img => img.is_primary) || product.product_images[0];

// Função para criar link do WhatsApp
function createWhatsAppLink(productId: string, productTitle: string, productPrice: string) {
  const productLink = `${Astro.url.origin}/produto/${productId}`;
  return productLink;
}

const productLink = createWhatsAppLink(id, product.title, formatPrice(product.price));
---

<Layout title={`${product.title} | ${projectName}`}>
  <div class="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-8">
    <div class="mb-6">
      <a href="/" class="text-primary-600 hover:text-primary-800 flex items-center">
        <svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5 mr-1" fill="none" viewBox="0 0 24 24" stroke="currentColor">
          <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M10 19l-7-7m0 0l7-7m-7 7h18" />
        </svg>
        Voltar para todos os produtos
      </a>
    </div>
    
    <div class="bg-white rounded-lg shadow-lg overflow-hidden">
      <div class="grid grid-cols-1 md:grid-cols-2 gap-8">
        <!-- Galeria de imagens -->
        <div class="p-6">
          <div class="relative aspect-square mb-4 rounded-lg overflow-hidden">
            {product.status === 'sold' && (
              <div class="absolute inset-0 bg-black bg-opacity-30 flex items-center justify-center z-10">
                <div class="bg-red-600 text-white text-xl font-bold py-2 px-6 transform -rotate-45">
                  Vendido
                </div>
              </div>
            )}
            <img 
              id="main-image" 
              src={mainImage?.image_url} 
              alt={product.title}
              class="w-full h-full object-cover"
            />
          </div>
          
          {product.product_images.length > 1 && (
            <div class="grid grid-cols-5 gap-2">
              {product.product_images.map((image) => (
                <div 
                  class={`aspect-square rounded-md overflow-hidden cursor-pointer border-2 ${image.id === mainImage?.id ? 'border-primary-500' : 'border-transparent'}`}
                  data-image-url={image.image_url}
                >
                  <img 
                    src={image.image_url} 
                    alt={product.title}
                    class="w-full h-full object-cover"
                  />
                </div>
              ))}
            </div>
          )}
        </div>
        
        <!-- Informações do produto -->
        <div class="p-6">
          <div class="flex flex-col">
            <h1 class="text-2xl font-bold text-gray-900 mb-2">{product.title}</h1>
            <p class="text-sm text-gray-500 mb-4">
              Categoria: <a href={`/categoria/${product.categories.slug}`} class="text-primary-600 hover:underline">{product.categories.name}</a>
            </p>
            
            <!-- Preço destacado -->
            <div class="bg-primary-50 p-4 rounded-lg mb-6">
              <div class="text-4xl font-bold text-primary-700">
                {formatPrice(product.price)}
              </div>
            </div>
          </div>
          
          <div class="mt-4">
            <h2 class="text-lg font-semibold text-gray-900 mb-2">Descrição</h2>
            <div class="prose prose-sm text-gray-700">
              {product.description.split('\n').map((paragraph) => (
                <p>{paragraph}</p>
              ))}
            </div>
          </div>
          
          <!-- Formas de pagamento -->
          <div class="mt-6 bg-gray-50 rounded-lg p-4">
            <h2 class="text-lg font-semibold text-gray-900 mb-2">Formas de pagamento</h2>
            <div class="flex items-center space-x-2 mb-2">
              <svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5 text-green-600" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 12l2 2 4-4m6 2a9 9 0 11-18 0 9 9 0 0118 0z" />
              </svg>
              <p class="text-gray-700 font-medium">{paymentMethods}</p>
            </div>
          </div>
          
          <!-- Status e botão de WhatsApp -->
          <div class="mt-6">
            {product.status === 'available' ? (
              <div class="space-y-4">
                <div class="p-4 rounded-lg bg-green-50 border border-green-100">
                  <h2 class="text-lg font-semibold text-green-800 mb-1">Produto disponível</h2>
                  <p class="text-sm text-green-700">
                    Este produto está disponível para venda. Clique no botão abaixo para demonstrar interesse.
                  </p>
                  <div class="mt-2 flex items-center">
                    <svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5 text-yellow-500 mr-1" viewBox="0 0 20 20" fill="currentColor">
                      <path d="M9.049 2.927c.3-.921 1.603-.921 1.902 0l1.07 3.292a1 1 0 00.95.69h3.462c.969 0 1.371 1.24.588 1.81l-2.8 2.034a1 1 0 00-.364 1.118l1.07 3.292c.3.921-.755 1.688-1.54 1.118l-2.8-2.034a1 1 0 00-1.175 0l-2.8 2.034c-.784.57-1.838-.197-1.539-1.118l1.07-3.292a1 1 0 00-.364-1.118L2.98 8.72c-.783-.57-.38-1.81.588-1.81h3.461a1 1 0 00.951-.69l1.07-3.292z" />
                    </svg>
                    <span class="text-sm text-gray-600">{product.interest_count || 0} pessoas demonstraram interesse</span>
                  </div>
                </div>
                
                <WhatsAppButton 
                  floating={false}
                  buttonText="Tenho interesse neste produto"
                  productLink={productLink}
                  message={whatsappMessage}
                  productId={id}
                  registerInterest={true}
                />
              </div>
            ) : (
              <div class="p-4 rounded-lg bg-red-50 border border-red-100">
                <h2 class="text-lg font-semibold text-red-800 mb-1">Produto vendido</h2>
                <p class="text-sm text-red-700">
                  Este produto já foi vendido, mas você pode ver outros produtos disponíveis.
                </p>
              </div>
            )}
          </div>
        </div>
      </div>
    </div>
    
    <!-- Produtos relacionados -->
    {relatedProducts.length > 0 && (
      <div class="mt-16">
        <h2 class="text-2xl font-bold text-gray-900 mb-6">Produtos relacionados</h2>
        <ProductGrid products={relatedProducts} />
      </div>
    )}
  </div>
  
  <!-- WhatsApp flutuante -->
  <WhatsAppButton 
    floating={true} 
    buttonText="Fale conosco" 
  />
</Layout>

<style>
  .label {
    @apply block text-sm font-medium text-gray-700 mb-1;
  }
  
  .input {
    @apply block w-full rounded-md border-gray-300 shadow-sm focus:border-primary-500 focus:ring-primary-500;
  }
  
  .btn {
    @apply inline-flex justify-center py-2 px-4 border border-transparent rounded-md shadow-sm text-sm font-medium focus:outline-none focus:ring-2 focus:ring-offset-2;
  }
  
  .btn-primary {
    @apply bg-primary-600 text-white hover:bg-primary-700 focus:ring-primary-500;
  }
</style>

<script>
  // Galeria de imagens
  const mainImage = document.getElementById('main-image') as HTMLImageElement;
  const thumbnails = document.querySelectorAll('[data-image-url]');
  
  thumbnails.forEach((thumbnail) => {
    thumbnail.addEventListener('click', () => {
      // Atualizar imagem principal
      const imageUrl = thumbnail.getAttribute('data-image-url');
      if (mainImage && imageUrl) {
        mainImage.src = imageUrl;
      }
      
      // Atualizar borda ativa
      thumbnails.forEach((thumb) => {
        thumb.classList.remove('border-primary-500');
        thumb.classList.add('border-transparent');
      });
      thumbnail.classList.remove('border-transparent');
      thumbnail.classList.add('border-primary-500');
    });
  });
</script>
