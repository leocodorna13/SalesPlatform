---
import ProductCard from './ProductCard.astro';
import { supabase } from '../services/supabase';

interface ProductImage {
  id: string;
  image_url: string;
  is_primary: boolean;
}

interface Product {
  id: string;
  title: string;
  price: number;
  status: 'available' | 'sold';
  categories: {
    name: string;
    slug: string;
  } | null;
  product_images: ProductImage[];
  views_count: number;
  interest_count: number;
}

interface Props {
  products: Product[];
  showSold?: boolean;
}

const { products, showSold = true } = Astro.props;

// Filtrar produtos vendidos se necessÃ¡rio
const filteredProducts = showSold ? products : products.filter(p => p.status === 'available');

// Encontrar a imagem principal para cada produto
const getMainImage = (images: ProductImage[]) => {
  if (!images || images.length === 0) return null;
  const primary = images.find((img: ProductImage) => img.is_primary);
  return primary ? primary.image_url : images[0].image_url;
};

// Obter contagem de interesses para cada produto
const interestCounts = await Promise.all(
  filteredProducts.map(async (product) => {
    const productId = typeof product.id === 'string' ? parseInt(product.id, 10) : product.id;
    console.log('Buscando interesses para produto:', productId, 'tipo:', typeof productId, 'original:', product.id);
    
    // Teste direto com o ID
    const { data, error } = await supabase
      .from('interests')
      .select('id')
      .eq('product_id', productId);
    
    const count = data?.length || 0;
    console.log(`Produto ${productId}: ${count} interesses`);
    
    return count;
  })
);

console.log('Contagens de interesse:', interestCounts);

---

<div class="product-grid grid grid-cols-1 sm:grid-cols-2 md:grid-cols-3 lg:grid-cols-4 gap-6">
  {filteredProducts.length > 0 ? (
    filteredProducts.map((product, index) => (
      <div class="product-item" data-product-id={product.id}>
        <ProductCard
          id={product.id}
          title={product.title}
          price={product.price}
          status={product.status}
          imageUrl={getMainImage(product.product_images)}
          category={product.categories}
          viewsCount={product.views_count || 0}
          interestCount={interestCounts[index] || 0}
        />
      </div>
    ))
  ) : (
    <div class="col-span-full text-center py-12">
      <p class="text-gray-500 text-lg">Nenhum produto encontrado.</p>
    </div>
  )}
</div>
<div id="noResults" class="text-center py-8 hidden">
  <p class="text-gray-500">Nenhum produto encontrado</p>
</div>
