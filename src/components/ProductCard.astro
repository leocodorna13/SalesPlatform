---
import type { Product } from '../types';

interface Props {
  product: Product;
}

const { product } = Astro.props;

// Verificar se o produto existe antes de desestruturar
if (!product) {
  console.error('ProductCard recebeu produto undefined');
  return;
}

// Adicionar logs para debug
console.log('Product data:', JSON.stringify(product, null, 2));

// Encontrar a imagem principal
const mainImage = product.product_images?.find(img => img.is_primary)?.image_url || 
                 product.product_images?.[0]?.image_url ||
                 'https://via.placeholder.com/300x300?text=Sem+Imagem';

// Extrair propriedades do produto
const category = product.category || (Array.isArray(product.categories) ? product.categories[0] : product.categories) || { 
  id: '0', 
  name: 'Sem categoria', 
  slug: 'sem-categoria' 
};
const { title, price, description } = product;

// Formatar preço
const formattedPrice = new Intl.NumberFormat('pt-BR', {
  style: 'currency',
  currency: 'BRL'
}).format(price);
---

{product ? (
  <div class="product-card bg-white rounded-xl ${product.featured ? 'shadow-featured border-2 border-accent-400' : 'shadow-soft'} overflow-hidden h-full w-full relative flex flex-col">    
    {product.featured && (
      <div class="absolute top-3 left-3 z-20">
        <span class="inline-flex items-center px-3 py-1.5 rounded-lg text-sm font-semibold bg-accent-500 text-white shadow-lg">
          <i class="fas fa-star mr-1.5"></i> Destaque
        </span>
      </div>
    )}
    <!-- Badge de categoria (sempre exibir) -->
    <div class="absolute top-3 right-3 z-10">
      <a 
        href={`/categoria/todos?categoria=${category.slug}`} 
        class="badge inline-flex items-center px-3 py-1.5 rounded-lg text-sm font-semibold 
        bg-white/90 backdrop-blur-sm text-primary-700 hover:bg-white 
        transition-all duration-300 shadow-lg hover:shadow-xl
        border border-primary-200 hover:border-primary-300"
        data-category={category.slug}
        data-name={category.name}
      >
        <i class="fas fa-tag mr-1.5 text-primary-500"></i>
        {category.name}
      </a>
    </div>
    
    <!-- Badge de status (se disponível) na diagonal -->
    {product.status && (
      <div class="absolute top-0 left-0 z-10 w-32 h-32 overflow-hidden">
        <div class={`absolute top-[26px] left-[-35px] w-[170px] text-center py-1.5 transform -rotate-45 
          ${product.status === 'sold' ? 'bg-red-500' : 'bg-green-500'} 
          text-white font-medium tracking-wider text-sm shadow-lg`}>
          {product.status === 'sold' ? 'VENDIDO' : 'DISPONÍVEL'}
        </div>
      </div>
    )}
    
    <!-- Imagem do produto -->
    <a href={`/produto/${product.id}`} class="block relative">
      <div class="relative overflow-hidden w-full aspect-square">
        <img 
          src={mainImage} 
          alt={title} 
          class="w-full h-full object-cover transition-transform duration-500 hover:scale-110"
          loading="lazy"
        />
      </div>
    </a>
    
    <!-- Conteúdo do card -->
    <div class="p-4 flex flex-col flex-grow">
      <!-- Título do produto com altura mínima -->
      <a href={`/produto/${product.id}`} class="block">
        <div class="min-h-10 mb-2">
          <h3 class="text-lg font-medium text-neutral-800 line-clamp-2">{title}</h3>
        </div>
      </a>
      
      <!-- Informações adicionais -->
      <div class="flex items-center text-sm text-neutral-500 mb-2">
        <span class="mr-3"><i class="fas fa-eye mr-1"></i> {product.viewsCount || product.views_count || product.views || 0}</span>
        <span><i class="fas fa-heart mr-1"></i> {product.interestCount || product.interest_count || 0}</span>
      </div>
      
      <!-- Preço -->
      <div class="mt-auto">
        <p class="text-accent-600 text-xl font-bold">
          {formattedPrice}
        </p>
      </div>
      
      <!-- Botão e ícones -->
      <div class="mt-3">
        <div class="flex gap-2">
          <a href={`/produto/${product.id}`} class="btn btn-primary flex-grow block text-center py-2 px-4 rounded-lg bg-primary-600 text-white hover:bg-primary-700 transition-colors">
            Ver detalhes
          </a>
          <button 
            class="share-btn flex items-center justify-center p-2 rounded-lg bg-primary-100 text-primary-600 hover:bg-primary-200 transition-colors"
            data-product-id={product.id}
            data-product-title={title}
            data-product-url={`${Astro.url.origin}/produto/${product.id}`}
          >
            <svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5" fill="none" viewBox="0 0 24 24" stroke="currentColor">
              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M8.684 13.342C8.886 12.938 9 12.482 9 12c0-.482-.114-.938-.316-1.342m0 2.684a3 3 0 110-2.684m0 2.684l6.632 3.316m-6.632-6l6.632-3.316m0 0a3 3 0 105.367-2.684 3 3 0 00-5.367 2.684zm0 9.316a3 3 0 105.368 2.684 3 3 0 00-5.368-2.684z" />
            </svg>
          </button>
        </div>
      </div>
    </div>
  </div>
) : (
  <div class="product-card bg-white rounded-xl shadow-soft overflow-hidden h-full w-full relative p-4 flex items-center justify-center">
    <p class="text-neutral-500">Produto não disponível</p>
  </div>
)}

<style>
  .line-clamp-2 {
    display: -webkit-box;
    -webkit-line-clamp: 2;
    -webkit-box-orient: vertical;
    overflow: hidden;
    max-height: 3rem; /* Limitar altura máxima para 2 linhas */
  }
  
  .status-badge {
    position: absolute;
    width: 100px;
    text-align: center;
  }
  
  .shadow-soft {
    box-shadow: 0 2px 10px rgba(0, 0, 0, 0.05);
  }
  
  .shadow-featured {
    box-shadow: 0 5px 20px rgba(245, 158, 11, 0.2);
  }
</style>
